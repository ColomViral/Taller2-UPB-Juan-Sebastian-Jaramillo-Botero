<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>velocidad = 4;

Key_Red = false;
Key_Black = false;
Key_Gold = false;
Key_Silver = false;
Key_Magic = false;

if (global.checkpointR == room)
{
    x = global.checkpointx;
    y = global.checkpointy;
}

can_shoot = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_shoot = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movimiento del jugador

if (keyboard_check(vk_left))
    {
    sprite_index = spr_PlayerLeft;
    if (!place_meeting(x-velocidad,y,obj_Wall))&amp;&amp;(!place_meeting(x-velocidad,y,obj_PuertaPadre))&amp;&amp;(!place_meeting(x-velocidad,y,obj_Door))
    {x = x - velocidad;}
    }

if (keyboard_check(vk_right))
    {
    sprite_index = spr_PlayerRight;    
    if (!place_meeting(x+velocidad,y,obj_Wall))&amp;&amp;(!place_meeting(x+velocidad,y,obj_PuertaPadre))&amp;&amp;(!place_meeting(x+velocidad,y,obj_Door))
    {x = x + velocidad;}
    }

if (keyboard_check(vk_up))
    {
    sprite_index = spr_PlayerUp;
    if (!place_meeting(x,y-velocidad,obj_Wall))&amp;&amp;(!place_meeting(x,y-velocidad,obj_PuertaPadre))&amp;&amp;(!place_meeting(x,y-velocidad,obj_Door))
    {y = y - velocidad;}
    }
    
if (keyboard_check(vk_down))
    {
    sprite_index = spr_PlayerDown;
    if (!place_meeting(x,y+velocidad,obj_Wall))&amp;&amp;(!place_meeting(x,y+velocidad,obj_PuertaPadre))&amp;&amp;(!place_meeting(x,y+velocidad,obj_Door))
    {y = y + velocidad;}
    }
    
if (!keyboard_check(vk_up)) &amp;&amp; (!keyboard_check(vk_down)) &amp;&amp; (!keyboard_check(vk_left)) &amp;&amp; (!keyboard_check(vk_right))
{
sprite_index = spr_Player;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gestión de llaves

/*  Se utilizará place_meeting para verificar la colision con alguna llave,
    luego se destruye la llave y se pone a true la variable respectiva en
    el objeto principal de llave
    */

if (place_meeting(x,y,obj_Key_Red))
    {
    with(obj_Key_Red){instance_destroy();}
    Key_Red = true;
    audio_play_sound(snd_Diamond, 10, false)
    }
    
if (place_meeting(x,y,obj_Key_Black))
    {
    with(obj_Key_Black){instance_destroy();}
    Key_Black = true;
    audio_play_sound(snd_Diamond, 10, false)
    }
    
if (place_meeting(x,y,obj_Key_Gold))
    {
    with(obj_Key_Gold){instance_destroy();}
    Key_Gold = true;
    audio_play_sound(snd_Diamond, 10, false)
    }
    
if (place_meeting(x,y,obj_Key_Silver))
    {
    with(obj_Key_Silver){instance_destroy();}
    Key_Silver = true;
    audio_play_sound(snd_Diamond, 10, false)
    }
    
if (place_meeting(x,y,obj_Key_Magic))
    {
    with(obj_Key_Magic){instance_destroy();}
    Key_Magic = true;
    audio_play_sound(snd_Diamond, 10, false)
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gstión de armas:
fire = mouse_check_button(mb_left)

if (fire)

{
    if (can_shoot = 1)
    {
        balas = instance_create(x,y, obj_PlayerBullet)
        balas.speed = 7;
        balas.direction = point_direction(obj_Player.x, obj_Player.y, mouse_x, mouse_y)
        can_shoot = 0; 
        alarm [0] = 13;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gestion de las puertas

/* En forma similar a las llaves se verificará el estado de la variable
   respectiva de la llave, la colisión y luego se destruye la puerta.
   */
   
if (Key_Red)
    {
    if(place_meeting(x+velocidad,y,obj_Door_Red))||
    (place_meeting(x-velocidad,y,obj_Door_Red))||
    (place_meeting(x,y-velocidad,obj_Door_Red))||
    (place_meeting(x,y+velocidad,obj_Door_Red))
        {
        with(obj_Door_Red){instance_destroy();}
        audio_play_sound(snd_Door, 10, false)
        }
    }
    

if (Key_Black)
    {
    if(place_meeting(x+velocidad,y,obj_Door_Black))||
    (place_meeting(x-velocidad,y,obj_Door_Black))||
    (place_meeting(x,y-velocidad,obj_Door_Black))||
    (place_meeting(x,y+velocidad,obj_Door_Black))
        {
        with(obj_Door_Black){instance_destroy();}
        audio_play_sound(snd_Door, 10, false)
        }
    }
    
    
if (Key_Gold)
    {
    if(place_meeting(x+velocidad,y,obj_Door_Gold))||
    (place_meeting(x-velocidad,y,obj_Door_Gold))||
    (place_meeting(x,y-velocidad,obj_Door_Gold))||
    (place_meeting(x,y+velocidad,obj_Door_Gold))
        {
        with(obj_Door_Gold){instance_destroy();}
        audio_play_sound(snd_Door, 10, false)
        }
    }
    
    
if (Key_Silver)
    {
    if(place_meeting(x+velocidad,y,obj_Door_Silver))||
    (place_meeting(x-velocidad,y,obj_Door_Silver))||
    (place_meeting(x,y-velocidad,obj_Door_Silver))||
    (place_meeting(x,y+velocidad,obj_Door_Silver))
        {
        with(obj_Door_Silver){instance_destroy();}
        audio_play_sound(snd_Door, 10, false)
        }
    }
    
    
if (Key_Magic)
    {
    if(place_meeting(x+velocidad,y,obj_Door_Magic))||
    (place_meeting(x-velocidad,y,obj_Door_Magic))||
    (place_meeting(x,y-velocidad,obj_Door_Magic))||
    (place_meeting(x,y+velocidad,obj_Door_Magic))
        {
        with(obj_Door_Magic){instance_destroy();}
        audio_play_sound(snd_Door, 10, false)
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Portal">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.checkpointR = noone;
room_goto(room_bonus);

with(obj_Timer)
{
tiempo -= tiempo;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Lives">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lives +=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_EnemigoPadre">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_Death();
audio_play_sound(snd_Dead,10,false);
lives -= 1;
if(lives &lt;= 0)
    {
    room_goto(Game_over);
    audio_stop_sound (snd_Boss);
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Goal">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_Goal,10,false);

if (room_exists(room_next(room)))
    {room_goto_next();}
    else
    {room_goto(Start);}

with(obj_Timer)
{
tiempo -= tiempo;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
